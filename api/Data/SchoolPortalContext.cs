// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using api.DTOs.Arms;
using api.DTOs.Country;
using api.DTOs.LGA;
using api.DTOs.Schools;
using api.DTOs.States;
using api.DTOs.Students;
using api.Models;
using Microsoft.EntityFrameworkCore;


namespace api.Data;

public partial class SchoolPortalContext : DbContext
{
    public SchoolPortalContext(DbContextOptions<SchoolPortalContext> options)
        : base(options)
    {
    }

    public virtual DbSet<ArmsTable> ArmsTables { get; set; }

    public virtual DbSet<Attendance> Attendances { get; set; }

    public virtual DbSet<Authenticate> Authenticates { get; set; }

    public virtual DbSet<ClassesTable> ClassesTables { get; set; }

    public virtual DbSet<CountryTable> CountryTables { get; set; }

    public virtual DbSet<ExamsTable> ExamsTables { get; set; }

    public virtual DbSet<FeesTable> FeesTables { get; set; }

    public virtual DbSet<GradesTable> GradesTables { get; set; }

    public virtual DbSet<Lga> Lgas { get; set; }

    public virtual DbSet<PaymentTable> PaymentTables { get; set; }

    public virtual DbSet<ResultTable> ResultTables { get; set; }

    public virtual DbSet<SchoolAdminRegistration> SchoolAdminRegistrations { get; set; }

    public virtual DbSet<State> States { get; set; }

    public virtual DbSet<StudentRegTab> StudentRegTabs { get; set; }

    public virtual DbSet<StudentclassTable> StudentclassTables { get; set; }

    public virtual DbSet<SubjectTable> SubjectTables { get; set; }

    public virtual DbSet<Subjectteacher> Subjectteachers { get; set; }

    public virtual DbSet<TeacherTab> TeacherTabs { get; set; }

    public virtual DbSet<TeachersAttaindance> TeachersAttaindances { get; set; }

    public virtual DbSet<TermTable> TermTables { get; set; }

    public virtual DbSet<TestTable> TestTables { get; set; }

    public virtual DbSet<TestType> TestTypes { get; set; }

    public virtual DbSet<UploadTable> UploadTables { get; set; }
    public DbSet<CustomSchoolFromSPDTO> CustomSchoolResults { get; set; }
    public DbSet<ArmsDTO> Arms {get; set;}
    public DbSet<CountryDTO> Nations {get; set;}

    public DbSet<StateDTO> StateDTO {get; set;}
    public DbSet<LgaDTO> LGA { get; set; }
    public DbSet<StudentSelectSPDTO> StudDTO{get; set;}
     protected override void OnModelCreating(ModelBuilder modelBuilder) 
    {
        modelBuilder.Entity<StudentSelectSPDTO>().HasNoKey().ToView(null);
        modelBuilder.Entity<LgaDTO>().HasNoKey().ToView(null);
        modelBuilder.Entity<StateDTO>().HasNoKey().ToView(null);
        modelBuilder.Entity<CountryDTO>().HasNoKey().ToView(null);
        modelBuilder.Entity<ArmsDTO>().HasNoKey().ToView(null);
        modelBuilder.Entity<CustomSchoolFromSPDTO>().HasNoKey().ToView(null);

#region 
        modelBuilder.Entity<ArmsTable>(entity =>
        {
            entity.HasKey(e => e.ArmsId).HasName("PK_armsTable_1");

            entity.ToTable("armsTable");

            entity.Property(e => e.Arm)
                .IsRequired()
                .HasMaxLength(50)
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.SchoolId)
                .HasMaxLength(50)
                .UseCollation("Latin1_General_CI_AS");

            entity.HasOne(d => d.School).WithMany(p => p.ArmsTables)
                .HasForeignKey(d => d.SchoolId)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK_armsTable_SchoolAdminRegistration");
        });

        modelBuilder.Entity<Attendance>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Attendance");

            entity.Property(e => e.Class)
                .IsRequired()
                .HasMaxLength(50)
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.Day)
                .IsRequired()
                .HasMaxLength(50)
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.DaysDate)
                .IsRequired()
                .HasMaxLength(50)
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.SchoolId)
                .IsRequired()
                .HasMaxLength(50)
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.Status)
                .IsRequired()
                .HasMaxLength(20)
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.StudentRollNumber)
                .IsRequired()
                .HasMaxLength(50)
                .UseCollation("Latin1_General_CI_AS");

            entity.HasOne(d => d.StudentRollNumberNavigation).WithMany()
                .HasForeignKey(d => d.StudentRollNumber)
                .HasConstraintName("FK_StudentRollNum_Attendance");
        });

        modelBuilder.Entity<Authenticate>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Authenticate");

            entity.Property(e => e.EmailAdress)
                .IsRequired()
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.PassWord)
                .IsRequired()
                .HasMaxLength(10)
                .UseCollation("Latin1_General_CI_AS");
        });

        modelBuilder.Entity<ClassesTable>(entity =>
        {
            entity.HasKey(e => e.ClassId);

            entity.ToTable("classesTable");

            entity.Property(e => e.Class)
                .IsRequired()
                .HasMaxLength(50)
                .UseCollation("Latin1_General_CI_AS")
                .HasColumnName("class");
            entity.Property(e => e.SchoolId)
                .HasMaxLength(50)
                .UseCollation("Latin1_General_CI_AS");

            entity.HasOne(d => d.School).WithMany(p => p.ClassesTables)
                .HasForeignKey(d => d.SchoolId)
                .HasConstraintName("FK_classesTable_SchoolAdminRegistration");
        });

        modelBuilder.Entity<CountryTable>(entity =>
        {
            entity.HasKey(e => e.CountryId).HasName("PK_countryTable_1");

            entity.ToTable("countryTable");

            entity.Property(e => e.CountryId).HasColumnName("CountryID");
            entity.Property(e => e.Countrys)
                .IsRequired()
                .UseCollation("Latin1_General_CI_AS")
                .HasColumnName("COUNTRYS");
        });

        modelBuilder.Entity<ExamsTable>(entity =>
        {
            entity.HasKey(e => e.ExamsId);

            entity.ToTable("ExamsTable");

            entity.Property(e => e.ExamsId).HasColumnName("ExamsID");
            entity.Property(e => e.ExamsScores).HasColumnType("decimal(18, 0)");
            entity.Property(e => e.FillersId)
                .HasMaxLength(50)
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.SchoolId)
                .IsRequired()
                .HasMaxLength(50)
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.StudentName)
                .IsRequired()
                .HasMaxLength(50)
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.StudentRollNumber)
                .IsRequired()
                .HasMaxLength(50)
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.SubjectName)
                .IsRequired()
                .HasMaxLength(50)
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.Term)
                .IsRequired()
                .HasMaxLength(15)
                .UseCollation("Latin1_General_CI_AS");

            entity.HasOne(d => d.School).WithMany(p => p.ExamsTables)
                .HasForeignKey(d => d.SchoolId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("Exams_SchoolId");

            entity.HasOne(d => d.StudentRollNumberNavigation).WithMany(p => p.ExamsTables)
                .HasForeignKey(d => d.StudentRollNumber)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ExamsTable_StudentRegTab");
        });

        modelBuilder.Entity<FeesTable>(entity =>
        {
            entity.HasKey(e => e.FeesId);

            entity.ToTable("feesTable");

            entity.Property(e => e.Amount).HasColumnType("decimal(18, 0)");
            entity.Property(e => e.Class)
                .IsRequired()
                .HasMaxLength(30)
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.SchoolId)
                .IsRequired()
                .HasMaxLength(50)
                .UseCollation("Latin1_General_CI_AS");

            entity.HasOne(d => d.School).WithMany(p => p.FeesTables)
                .HasForeignKey(d => d.SchoolId)
                .HasConstraintName("FK_feesTable_SchoolAdminRegistration");
        });

        modelBuilder.Entity<GradesTable>(entity =>
        {
            entity.HasKey(e => e.GradesId);

            entity.ToTable("GradesTable");

            entity.Property(e => e.Grades)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength()
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.Remark)
                .HasMaxLength(50)
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.SchoolId)
                .IsRequired()
                .HasMaxLength(50)
                .UseCollation("Latin1_General_CI_AS");

            entity.HasOne(d => d.School).WithMany(p => p.GradesTables)
                .HasForeignKey(d => d.SchoolId)
                .HasConstraintName("FK_GradesTable_SchoolAdminRegistration");
        });

        modelBuilder.Entity<Lga>(entity =>
        {
            entity.ToTable("Lga");

            entity.Property(e => e.Lgaid).HasColumnName("LGAID");
            entity.Property(e => e.Lga1)
                .IsRequired()
                .HasMaxLength(50)
                .UseCollation("Latin1_General_CI_AS")
                .HasColumnName("LGA");
            entity.Property(e => e.StateId).HasColumnName("stateID");

            entity.HasOne(d => d.State).WithMany(p => p.Lgas)
                .HasForeignKey(d => d.StateId)
                .HasConstraintName("FK_Lga_state");
        });

        modelBuilder.Entity<PaymentTable>(entity =>
        {
            entity.HasKey(e => e.PaymentId);

            entity.ToTable("PaymentTable");

            entity.Property(e => e.PaymentId).HasColumnName("paymentID");
            entity.Property(e => e.AmountPaid)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("amountPaid");
            entity.Property(e => e.Fees).HasColumnType("decimal(18, 0)");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(50)
                .UseCollation("Latin1_General_CI_AS")
                .HasColumnName("name");
            entity.Property(e => e.PaymentDate)
                .HasColumnType("datetime")
                .HasColumnName("paymentDate");
            entity.Property(e => e.SchoolId)
                .IsRequired()
                .HasMaxLength(50)
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.Status)
                .IsRequired()
                .HasMaxLength(50)
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.StudentClass)
                .IsRequired()
                .HasMaxLength(50)
                .UseCollation("Latin1_General_CI_AS")
                .HasColumnName("studentClass");
            entity.Property(e => e.StudentRollnum)
                .IsRequired()
                .HasMaxLength(50)
                .UseCollation("Latin1_General_CI_AS")
                .HasColumnName("studentRollnum");
            entity.Property(e => e.Term)
                .IsRequired()
                .HasMaxLength(15)
                .UseCollation("Latin1_General_CI_AS");

            entity.HasOne(d => d.School).WithMany(p => p.PaymentTables)
                .HasForeignKey(d => d.SchoolId)
                .HasConstraintName("FK_PaymentTable_SchoolAdminRegistration");

            entity.HasOne(d => d.StudentRollnumNavigation).WithMany(p => p.PaymentTables)
                .HasForeignKey(d => d.StudentRollnum)
                .HasConstraintName("FK_PaymentTable_StudentRegTab");
        });

        modelBuilder.Entity<ResultTable>(entity =>
        {
            entity.HasKey(e => e.ResultId);

            entity.ToTable("ResultTable");

            entity.Property(e => e.CatTotal).HasColumnType("decimal(18, 0)");
            entity.Property(e => e.ExamsTotal).HasColumnType("decimal(18, 0)");
            entity.Property(e => e.StudentRollNumber)
                .IsRequired()
                .HasMaxLength(50)
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.SumTotal).HasColumnType("decimal(18, 0)");

            entity.HasOne(d => d.StudentRollNumberNavigation).WithMany(p => p.ResultTables)
                .HasForeignKey(d => d.StudentRollNumber)
                .HasConstraintName("FK_ResultTable_StudentRegTab");
        });

        modelBuilder.Entity<SchoolAdminRegistration>(entity =>
        {
            entity.HasKey(e => e.SchoolId).HasName("PK_SchoolRegistration");

            entity.ToTable("SchoolAdminRegistration");

            entity.Property(e => e.SchoolId)
                .HasMaxLength(50)
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.AdminOtherNames)
                .IsRequired()
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.AdminSurName)
                .IsRequired()
                .HasMaxLength(50)
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.Gender)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength()
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.LastEditedOn).HasColumnType("DateTimeOffset");
            entity.Property(e => e.RegistrationDate).HasColumnType("DateTimeOffset");
            entity.Property(e => e.SchoolEmailAdress)
                .IsRequired()
                .HasMaxLength(50)
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.SchoolName)
                .IsRequired()
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.SchoolPhoneNumber)
                .IsRequired()
                .HasMaxLength(50)
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.SchoolPostalCode)
                .HasMaxLength(50)
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.StreetName)
                .IsRequired()
                .UseCollation("Latin1_General_CI_AS");
        });

        modelBuilder.Entity<State>(entity =>
        {
            entity.ToTable("state");

            entity.Property(e => e.StateId).HasColumnName("stateID");
            entity.Property(e => e.CountryId).HasColumnName("CountryID");
            entity.Property(e => e.state)
                .IsRequired()
                .HasMaxLength(50)
                .UseCollation("Latin1_General_CI_AS")
                .HasColumnName("state");

            entity.HasOne(d => d.Country).WithMany(p => p.States)
                .HasForeignKey(d => d.CountryId)
                .HasConstraintName("FK_state_countryTable");
        });

        modelBuilder.Entity<StudentRegTab>(entity =>
        {
            entity.HasKey(e => e.StudentRollNumber);

            entity.ToTable("StudentRegTab");

            entity.Property(e => e.StudentRollNumber)
                .HasMaxLength(50)
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.BloodGroup)
                .HasMaxLength(50)
                .HasDefaultValue("Null")
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.DateOfBirth)
                .HasDefaultValueSql("(((0)-(0))-(0))")
                .HasColumnType("datetime");
            entity.Property(e => e.Disability)
                .HasDefaultValue("null")
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.EmailAdress)
                .HasDefaultValue("No Email")
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.FirstName)
                .IsRequired()
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.Genotype)
                .HasMaxLength(50)
                .HasDefaultValue("Null")
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.GuidianceName)
                .IsRequired()
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.GuidiancePhoneNo)
                .IsRequired()
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.Isborder)
                .HasMaxLength(50)
                .HasDefaultValue("Null")
                .UseCollation("Latin1_General_CI_AS")
                .HasColumnName("isborder");
            entity.Property(e => e.LastEditedOn).HasColumnType("datetime");
            entity.Property(e => e.LastName)
                .IsRequired()
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.Lga).HasColumnName("LGA");
            entity.Property(e => e.MiddleName)
                .IsRequired()
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.Passport).HasDefaultValueSql("(
            entity.Property(e => e.PresentClass)
                .IsRequired()
                .HasMaxLength(50)
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.ReasonForChange)
                .HasDefaultValue("Null")
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.RegistrationDate).HasColumnType("datetimeoffset");
            entity.Property(e => e.ResidentialAddress)
                .HasDefaultValue("No Address")
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.SchoolAttended)
                .HasDefaultValue("Null")
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.SchoolId)
                .IsRequired()
                .HasMaxLength(50)
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.SecreatPassWord)
                .HasDefaultValue("null")
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.Sex)
                .IsRequired()
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.StudentEmail)
                .HasDefaultValue("Null")
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.StudentIdS).ValueGeneratedOnAdd();
            entity.Property(e => e.StudentPhoneNumber)
                .HasDefaultValueSql("(NULL)")
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e=>e.IsActive)
                .HasDefaultValue("Null")
                .UseCollation("Latin1_General_CI_AS");

            entity.HasOne(d => d.School).WithMany(p => p.StudentRegTabs)
                .HasForeignKey(d => d.SchoolId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("StudentRegTab_schoolId");
        });

        modelBuilder.Entity<StudentclassTable>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("StudentclassTable");

            entity.HasIndex(e => e.StudentRollNumber, "UQ__Studentc__8D8FADED5F492382").IsUnique();

            entity.Property(e => e.Arm)
                .IsRequired()
                .HasMaxLength(50)
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.Class)
                .IsRequired()
                .HasMaxLength(50)
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.StudentRollNumber)
                .IsRequired()
                .HasMaxLength(20)
                .UseCollation("Latin1_General_CI_AS");
        });

        modelBuilder.Entity<SubjectTable>(entity =>
        {
            entity.HasKey(e => e.SubjectId);

            entity.ToTable("subjectTable");

            entity.Property(e => e.SubjectId).HasColumnName("SubjectID");
            entity.Property(e => e.SchoolId)
                .IsRequired()
                .HasMaxLength(50)
                .UseCollation("Latin1_General_CI_AS")
                .HasColumnName("SchoolID");
            entity.Property(e => e.SubjectName)
                .IsRequired()
                .HasMaxLength(50)
                .UseCollation("Latin1_General_CI_AS");
        });

        modelBuilder.Entity<Subjectteacher>(entity =>
        {
            entity.ToTable("Subjectteacher");

            entity.Property(e => e.Class)
                .IsRequired()
                .HasMaxLength(50)
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.SchoolId)
                .HasMaxLength(50)
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.SubjectId).HasColumnName("SubjectID");
            entity.Property(e => e.TeacherId)
                .IsRequired()
                .HasMaxLength(50)
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.TeacherName)
                .IsRequired()
                .HasMaxLength(50)
                .UseCollation("Latin1_General_CI_AS");

            entity.HasOne(d => d.Subject).WithMany(p => p.Subjectteachers)
                .HasForeignKey(d => d.SubjectId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Subjectteacher_subjectTable");
        });

        modelBuilder.Entity<TeacherTab>(entity =>
        {
            entity.HasKey(e => e.UserId);

            entity.ToTable("TeacherTab");

            entity.Property(e => e.UserId).ValueGeneratedNever();
            entity.Property(e => e.Dob)
                .HasColumnType("datetime")
                .HasColumnName("DOB");
            entity.Property(e => e.EmailAdress).UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.FirstName)
                .IsRequired()
                .HasMaxLength(50)
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.Gender)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength()
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.IsClassTeacher)
                .IsRequired()
                .HasMaxLength(50)
                .UseCollation("Latin1_General_CI_AS")
                .HasColumnName("isClassTeacher");
            entity.Property(e => e.LastEditedOn).HasColumnType("datetime");
            entity.Property(e => e.LastName)
                .IsRequired()
                .HasMaxLength(20)
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.MiddleName)
                .IsRequired()
                .HasMaxLength(50)
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.Passport).HasColumnName("passport");
            entity.Property(e => e.Password)
                .HasMaxLength(50)
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.PasswordAnswer).UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.PasswordQuestion).UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.PhoneNumber)
                .IsRequired()
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.RegistrationDate).HasColumnType("datetime");
            entity.Property(e => e.ResidentialAdress)
                .IsRequired()
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.RollId).ValueGeneratedOnAdd();
            entity.Property(e => e.SchoolId)
                .IsRequired()
                .HasMaxLength(50)
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.TeacherRollId)
                .IsRequired()
                .HasMaxLength(50)
                .UseCollation("Latin1_General_CI_AS");

            entity.HasOne(d => d.School).WithMany(p => p.TeacherTabs)
                .HasForeignKey(d => d.SchoolId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_TeacherTab_SchoolId");
        });

        modelBuilder.Entity<TeachersAttaindance>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TeachersAttaindance");

            entity.Property(e => e.Day)
                .IsRequired()
                .HasMaxLength(20)
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.Status)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false)
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.TeacherId)
                .IsRequired()
                .HasMaxLength(10)
                .UseCollation("Latin1_General_CI_AS");
        });

        modelBuilder.Entity<TermTable>(entity =>
        {
            entity.HasKey(e => e.Term).HasName("PK_TermTable_1");

            entity.ToTable("TermTable");

            entity.Property(e => e.Term)
                .HasMaxLength(15)
                .UseCollation("Latin1_General_CI_AS");
        });

        modelBuilder.Entity<TestTable>(entity =>
        {
            entity.HasKey(e => e.TestId);

            entity.ToTable("testTable");

            entity.Property(e => e.TestId).HasColumnName("TestID");
            entity.Property(e => e.FillersId)
                .HasMaxLength(50)
                .UseCollation("Latin1_General_CI_AS")
                .HasColumnName("FillersID");
            entity.Property(e => e.FirstName)
                .IsRequired()
                .HasMaxLength(50)
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.LastName)
                .IsRequired()
                .HasMaxLength(50)
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.SchoolId)
                .IsRequired()
                .HasMaxLength(50)
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.Scores).HasColumnType("decimal(18, 0)");
            entity.Property(e => e.StudentRollNum)
                .IsRequired()
                .HasMaxLength(50)
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.SublectName)
                .IsRequired()
                .HasMaxLength(50)
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.Term)
                .IsRequired()
                .HasMaxLength(15)
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.TestType)
                .IsRequired()
                .HasMaxLength(50)
                .UseCollation("Latin1_General_CI_AS");

            entity.HasOne(d => d.School).WithMany(p => p.TestTables)
                .HasForeignKey(d => d.SchoolId)
                .HasConstraintName("Test_SchoolId");

            entity.HasOne(d => d.StudentRollNumNavigation).WithMany(p => p.TestTables)
                .HasForeignKey(d => d.StudentRollNum)
                .HasConstraintName("FK_testTable_StudentRegTab");
        });

        modelBuilder.Entity<TestType>(entity =>
        {
            entity.HasKey(e => e.TesyType).HasName("PK_Test_Type_1");

            entity.ToTable("Test_Type");

            entity.Property(e => e.TesyType)
                .HasMaxLength(5)
                .UseCollation("Latin1_General_CI_AS");
        });

        modelBuilder.Entity<UploadTable>(entity =>
        {
            entity.HasKey(e => e.UploadId);

            entity.ToTable("UploadTable");

            entity.Property(e => e.Class)
                .IsRequired()
                .HasMaxLength(50)
                .UseCollation("Latin1_General_CI_AS")
                .HasColumnName("class");
            entity.Property(e => e.Description).UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.FileData).IsRequired();
            entity.Property(e => e.FileType)
                .HasMaxLength(500)
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.Filename)
                .IsRequired()
                .HasMaxLength(50)
                .UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.OriginalName).UseCollation("Latin1_General_CI_AS");
            entity.Property(e => e.SchoolId)
                .IsRequired()
                .HasMaxLength(50)
                .UseCollation("Latin1_General_CI_AS");
        });
#endregion

        OnModelCreatingPartial(modelBuilder);
    } 

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}